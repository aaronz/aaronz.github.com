---
layout: post
title:  "谷歌架构简介"
date:   2016-2-18 00:00:00
categories: architecture
---

Google的扩展性堪称世界之最。我们都知道Google的搜索准确，迅速而且复杂，但是这并不是Google唯一的专长。他们一直致力于构建高度可扩展的应用的框架和平台，他们是如何做到这一点的？

![Google](/assets/images/posts/google-logo.jpg)

<!--more-->

#平台  

- Linux
- Python, Java, C++

#目前状态  

- 2006年约有45w台常规服务器  
- 2005年索引了80亿页面  
- 2008年约有200个GFS集群。每个集群有1000只5000台主机。上千台主机组成的资源池从GFS集群读取可达5PB的存储。集群间聚集读写速度可达40GB/s。  
- 2008年有约6000个MapReduce应用，并且以每月几百个新应用的速度在增加。  
- BigTable存储数十亿的URL,数百TB的图片资源以及数亿用户的喜好信息。    

#产品架构  

谷歌将自己平台总结为三层结构，确保可以以低成本快速部署，以产品角度观察性能数据，花钱买硬件存储日志信息，不丢失数据。
- 产品层：搜索，广告，邮件，地图，视频，聊天，博客等
- 分布式系统平台： GFS，MapReduce, BigTable  
- 计算平台： 一系列的数据中心  

#可靠地存储机制 - GFS(谷歌文件系统)

- 可靠、可扩展的存储机制是任何应用的核心需求。GFS是谷歌的核心存储系统。  
- GFS是大型分布式结构化文件存储系统，可以用来存储超大规模数据。
- 谷歌自己写GFS而不是用现成的系统原因在于，
	- 提供跨数据中心的高可靠性  
	- 数千个网络节点的可扩展性  
	- 满足海量数据读写的需求  
	- 支持GB级数据块 
	- 有效的分发操作减少节点之间性能瓶颈  
- 系统包含主从服务器  
	- 主服务器保存元数据。数据存储为64MB的数据块。客户端与主节点通讯来进行文件元数据操作来定位包含数据的从服务器。  
	- 从服务器存储真正的数据。每个数据块在三个数据服务器之间作冗余备份。一旦主服务器指向，客户端则直接与从服务器之间进行通信。  

- 新应用上线可以使用已有的GFS集群，也可以创建自己的集群。  
- GFS可以在应用级别调整以符合应用的需求。

# 通过MapReduce操作数据

- 谷歌如何实现在海量数据上面的数据操作？例如我们有很多TB的数据存储在1000台服务器上。数据库系统是无法有效的支持这种级别的数据操作的。这就是MapReduce被引入的原因。  
- MapReduce是一种用来处理和生成大数据集的编程模型以及相关的实现。用户指定一个map方法用以处理键值对来生成一组中间键值对，指定一个reduce方法来合并具有相同中间键的结果。现实世界中许多问题都可以依赖于这个模型得到解决。这样以函数形式的程序被许多常规主机并行处理。管理系统负责对输入数据进行分区，调度程序在不同主机上执行，处理主机故障，管理主机间通讯。这让没有并行计算经验的程序员也可以很容易的利用大型分布式系统。  
- 为什么要用MapReduce  
	- 是一个不错的在大量主机间调度任务的方式  
	- 可以处理主机故障  
	- 可以支持不同的应用，例如搜索，广告。几乎所有的应用都有MapReduce类型的操作。例如可以用它来预处理有效数据，计算统计单词，TB级数据排序等。  
	- 可以调整计算资源与IO资源之间的距离。 
- MapReduce系统包含三种类型的服务器  
	- 主服务器分发任务到map和reduce服务器，同时追踪任务状态。  
	- Map服务器接收用户输入并进行调用map操作。将结果分发到中间文件。  
	- Reduce服务器接收中间文件并调用Reduce方法。  
	

#硬件环境


#Web服务器


#数据服务  


#新技能get  


#参考文章  